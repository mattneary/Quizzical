{"name":"Quizzical","tagline":"JSON API testing & doc generation driven by CURL","body":"Quizzical\r\n=========\r\nQuizzical is a command-line utility for the testing and documentation of JSON APIs. Both tests and specs are specified through CURL commands, piped to an assertion checker provided with the criteria defining `success`.\r\n\r\nInstallation\r\n------------\r\n\r\nTo install quizzical or update to the latest version, perform the following command in the terminal.\r\n\r\n```sh\r\n$ git clone https://github.com/mattneary/Quizzical.git; \\\r\n  cd Quizzical/lib; ./install.sh\r\n```\r\n\r\nTesting and Spec Generation\r\n---------------------------\r\nTo test a script of curls, run the following.\r\n\r\n```sh\r\nquizzical tests.sh\r\n```\r\n\r\nTo generate docs from the same file, run this, as a function of tests and an output markdown file.\r\n\r\n```sh\r\nquizzical tests.sh docs.md\r\n```\r\n\r\nGetting Started\r\n---------------\r\nQuizzical solves a very specific problem - testing a JSON API with CURL. CURL has a very clear and concise notation for expressing the specifications of an API in docs, etc. Additionally, CURL is a cross-platform standard in HTTP requests. All tests are of the following form.\r\n\r\n```sh\r\ncurl -s http://localhost:8080/api/boards/123 | \\\r\n  $assert \"board access\" success=true\r\n```\r\n\r\nThe `curl` progress dialogues are suppressed with `-s`, and then the response is piped to the assertion checker script. A name for the test and criteria are passed as arguments. These criteria are assessed on the JSON response, with `@` being a special symbol for equality with the entire response, e.g., `@={}`.\r\n\r\nAdditionally, if you are curling a raw file, you can specify `\"#raw\"` as the criterion and tests will not be checked based on content.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}